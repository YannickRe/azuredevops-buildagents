parameters:
- name: image_type
  displayName: Build Agent Image
  type: string
  default: windows2019
  values:
  - windows2019
  - windows2022
  - ubuntu2004
  - ubuntu2204
- name: variable_group
  displayName: Variable Group
  type: string
  default: BuildAgents
- name: agent_pool
  displayName: Agent Pool
  type: string
  default: CI Windows2019
- name: depends_on
  displayName: First Job Depends On
  type: object
  default: ' '
- name: repository_base_path
  displayName: Scripts Path
  type: string
  default: .


jobs:
- job: updatevmss
  displayName: Update Virtual Machine Scale Set (${{ parameters.image_type }})
  timeoutInMinutes: 600
  cancelTimeoutInMinutes: 30
  pool: 
    name: ${{ parameters.agent_pool }}
  variables:
  - name: ManagedImageId
    value: $[stageDependencies.convert_template_to_managedvm.managedimagegeneration.outputs['createmanagedimage.ManagedImageId'] ]
  - group: ${{ parameters.variable_group }}
  - ${{ if eq(parameters.image_type, 'windows2019') }}:
    - name: VmssNames
      value: $[variables.VMSS_Windows2019]
  - ${{ if eq(parameters.image_type, 'windows2022') }}:
    - name: VmssNames
      value: $[variables.VMSS_Windows2022]
  - ${{ if eq(parameters.image_type, 'ubuntu2004') }}:
    - name: VmssNames
      value: $[variables.VMSS_Ubuntu2004]
  - ${{ if eq(parameters.image_type, 'ubuntu2204') }}:
    - name: VmssNames
      value: $[variables.VMSS_Ubuntu2204]

  steps:
  - checkout: self
  - ${{ if ne(parameters.repository_base_path, '.') }}:
    - checkout: ${{ parameters.repository_base_path }}
  - task: PowerShell@2
    displayName: 'Update Virtual Machine Scale Set'
    inputs:
      targetType: filePath
      filePath: ${{ parameters.repository_base_path }}/scripts/update-vmss.ps1
      arguments: -ClientId $(CLIENT_ID) `
                 -ClientSecret $(CLIENT_SECRET) `
                 -ResourceGroup $(AZURE_AGENTS_RESOURCE_GROUP) `
                 -SubscriptionId $(AZURE_SUBSCRIPTION) `
                 -TenantId $(AZURE_TENANT) `
                 -VmssNames $(VmssNames) `
                 -ManagedImageId $(ManagedImageId)